import { NextResponse } from 'next/server'
import { GoogleGenerativeAI } from '@google/generative-ai'

const apiKey = process.env.GEMINI_API_KEY

if (!apiKey) {
	throw new Error('GEMINI_API_KEY is not set in the environment variables.')
}

export async function POST(request: Request) {
	try {
		const { topic, tone } = await request.json()

		if (!topic || !tone) {
			return NextResponse.json({ error: 'Topic and tone are required' }, { status: 400 })
		}

		const genAI = new GoogleGenerativeAI(apiKey as string) // 
		const model = genAI.getGenerativeModel({
			model: 'gemini-2.0-flash-exp',
		})

		const generationConfig = {
			temperature: 1,
			topP: 0.95,
			topK: 40,
			maxOutputTokens: 8192,
			responseMimeType: 'application/json',
		}

		const chatSession = model.startChat({
			generationConfig,
			history: [],
		})

		const result = await chatSession.sendMessage(
			`Write a professional social media post for Facebook and Instagram about: ${topic}, with a tone: ${tone}.`
		)

		if (!result.response || !result.response.text()) {
			throw new Error('No text generated by the model.')
		}

		let responseData
		try {
			responseData = JSON.parse(result.response.text())
		} catch (error: unknown) {
			if (error instanceof Error) {
				console.error(error.message || 'Invalid response format from the API.')
				throw new Error(error.message || 'Invalid response format from the API.')
			} else {
				console.error('An unknown error occurred.')
				throw new Error('An unknown error occurred.')
			}
		}

		const facebookPost = responseData.facebook_post || 'No Facebook post generated.'
		const instagramPost = responseData.instagram_post || 'No Instagram post generated.'

		const generatedPost = `
      **Facebook Post:**
      ${facebookPost}

      **Instagram Post:**
      ${instagramPost}
    `.trim()

		return NextResponse.json({ post: generatedPost })
	} catch (error) {
		console.error('Error generating post:', error)
		return NextResponse.json({ error: 'Failed to generate post. Please try again later.' }, { status: 500 })
	}
}
